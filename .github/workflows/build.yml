name: Crazy Curves ZXP Build & Release

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      bump:
        description: "Version bump type (patch, minor, major)"
        required: false
        default: patch

env:
  CERT_P12_BASE64: ${{ secrets.CERT_P12_BASE64 }}
  CERT_PASSWORD: ${{ secrets.CERT_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: sudo apt-get install -y openssl xmlstarlet

      - name: Generate Dummy Certificate (fallback)
        if: env.CERT_P12_BASE64 == ''
        run: |
          openssl req -x509 -newkey rsa:2048 -keyout dummy-key.pem -out dummy-cert.pem -days 365 -nodes -subj "/C=US/ST=CA/L=SF/O=Dummy/OU=Dev/CN=localhost"
          openssl pkcs12 -export -out cert.p12 -inkey dummy-key.pem -in dummy-cert.pem -passout pass:password

      - name: Auto-bump Version
        run: |
          FILE=CSXS/manifest.xml
          VER=$(xmlstarlet sel -t -v "/ExtensionManifest/@ExtensionBundleVersion" $FILE)
          MAJOR=$(echo $VER | cut -d. -f1)
          MINOR=$(echo $VER | cut -d. -f2)
          PATCH=$(echo $VER | cut -d. -f3)
          case "${{ github.event.inputs.bump }}" in
            major) NEW_VER="$((MAJOR + 1)).0.0";;
            minor) NEW_VER="$MAJOR.$((MINOR + 1)).0";;
            patch|*) NEW_VER="$MAJOR.$MINOR.$((PATCH + 1))";;
          esac
          xmlstarlet ed -P -L -u "/ExtensionManifest/@ExtensionBundleVersion" -v "$NEW_VER" $FILE
          echo "version=$NEW_VER"

      - name: Prepare Extension Files
        run: |
          mkdir -p dist/CrazyCurves
          rsync -av --exclude='.git*' . dist/CrazyCurves

      - name: Create Unsigned ZIP
        run: |
          cd dist
          zip -r CrazyCurves.zip CrazyCurves

      - name: Decode Certificate
        if: env.CERT_P12_BASE64 != ''
        run: echo "$CERT_P12_BASE64" | base64 -d > cert.p12

      - name: Download ZXPSignCmd
        run: |
          wget https://github.com/Adobe-CEP/CEP-Resources/raw/main/ZXPSignCmd/mac/ZXPSignCmd
          chmod +x ZXPSignCmd

      - name: Sign Extension (.zxp)
        run: |
          ./ZXPSignCmd -sign dist/CrazyCurves dist/CrazyCurves.zxp cert.p12 "${CERT_PASSWORD:-password}"

      - name: Upload Unsigned ZIP
        uses: actions/upload-artifact@v4
        with:
          name: CrazyCurves-Unsigned
          path: dist/CrazyCurves.zip

      - name: Upload Signed ZXP
        uses: actions/upload-artifact@v4
        with:
          name: CrazyCurves-Signed-ZXP
          path: dist/CrazyCurves.zxp

      - name: Extract Version
        id: version
        run: |
          VER=$(grep -oP '(?<=ExtensionBundleVersion=")[^\"]+' CSXS/manifest.xml)
          echo "version=$VER" >> $GITHUB_OUTPUT

      - name: Generate CHANGELOG.md
        run: npx auto-changelog --template keepachangelog --output CHANGELOG.md

      - name: Commit CHANGELOG
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add CHANGELOG.md
          git commit -m "docs: update changelog" || echo "No changes to commit"
          git push

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: crazy-curves-v${{ steps.version.outputs.version }}
          name: Crazy Curves v${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          files: |
            dist/CrazyCurves.zip
            dist/CrazyCurves.zxp
